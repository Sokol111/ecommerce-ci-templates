name: Reusable SDK Generate and Release

on:
  workflow_call:
    inputs:
      openapi-file:
        description: "Path to OpenAPI YAML file"
        required: true
        type: string
      js-client-dir:
        description: "Directory for JavaScript client"
        required: true
        type: string
      gen-dir:
        description: "Directory for generated Go code"
        required: true
        type: string
      template-dir:
        description: "Directory for template files (package.json, tsconfig.json)"
        required: true
        type: string
    secrets:
      NPM_TOKEN:
        description: "NPM token for publishing"
        required: true

permissions:
  contents: write

jobs:
  generate-and-release-sdk:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # To allow tag creation

      - name: Get version with v prefix from OpenAPI
        id: get_version
        run: echo "version=v$(yq e '.info.version' ${{ inputs.openapi-file }})" >> $GITHUB_OUTPUT

      - name: Get lowercase full repository name
        id: get_lowercase_repo_name
        run: |
          echo "repo_name=${GITHUB_REPOSITORY,,}" >> $GITHUB_OUTPUT

      - name: Extract project name
        id: get_project_name
        run: |
          project_name=$(basename "${GITHUB_REPOSITORY}")
          echo "project_name=$project_name" >> $GITHUB_OUTPUT

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24.2

      - name: Download generate-api.mk
        run: |
          curl -sSfL https://raw.githubusercontent.com/Sokol111/ecommerce-makefiles/master/makefiles/generate-api.mk -o generate-api.mk
          if [ ! -s generate-api.mk ]; then
            echo "Failed to download or file is empty!"
            exit 1
          fi

      - name: Install tools
        run: make -f generate-api.mk install-tools

      - name: Init Go module
        run: |
          go mod init github.com/${{ github.repository }} || true
          go mod tidy

      - name: Generate Go SDK
        run: make -f generate-api.mk types server client
        env:
          GEN_DIR: ${{ inputs.gen-dir }}
          OPENAPI_FILE: ${{ inputs.openapi-file }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Generate JavaScript SDK
        run: make -f generate-api.mk js
        env:
          PROJECT_NAME: ${{ steps.get_project_name.outputs.project_name }}
          PACKAGE_NAME: ${{ steps.get_lowercase_repo_name.outputs.repo_name }}
          AUTHOR: ${{ github.repository_owner }}
          REPOSITORY_URL: "https://github.com/${{ github.repository }}.git"
          VERSION: ${{ steps.get_version.outputs.version }}
          JS_CLIENT_DIR: ${{ inputs.js-client-dir }}
          OPENAPI_FILE: ${{ inputs.openapi-file }}
          TEMPLATE_DIR: ${{ inputs.template-dir }}

      - name: Publish JavaScript SDK to npm
        run: |
          cd ${{ inputs.js-client-dir }}
          npm config set //registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}
          npm publish --access public
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Commit to `generated` branch
        run: |
          git checkout -B generated
          git add ${{ inputs.gen-dir }}/
          git commit -m "chore: generate SDK for release ${{ steps.get_version.outputs.version }}" || echo "No changes to commit"
          git push origin generated --force

      - name: Create tag on generated branch
        run: |
          git tag ${{ steps.get_version.outputs.version }}
          git push origin ${{ steps.get_version.outputs.version }}

      - name: Create GitHub Release with generated code
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          name: Release ${{ steps.get_version.outputs.version }}
