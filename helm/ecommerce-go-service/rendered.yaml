---
# Source: ecommerce-go-service/charts/ecommerce-category-query-service/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ecommerce-category-query-service-config
data:
  APP_ENV: production
  MONGO_HOST: mongo
  KAFKA_BROKERS: kafka:29092
---
# Source: ecommerce-go-service/charts/ecommerce-category-service/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ecommerce-category-service-config
data:
  APP_ENV: production
  MONGO_HOST: mongo
  KAFKA_BROKERS: kafka:29092
---
# Source: ecommerce-go-service/charts/ecommerce-product-query-service/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ecommerce-product-query-service-config
data:
  APP_ENV: production
  MONGO_HOST: mongo
  KAFKA_BROKERS: kafka:29092
---
# Source: ecommerce-go-service/charts/ecommerce-product-service/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ecommerce-product-service-config
data:
  APP_ENV: production
  MONGO_HOST: mongo
  KAFKA_BROKERS: kafka:29092
---
# Source: ecommerce-go-service/charts/ecommerce-category-query-service/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ecommerce-go-service-ecommerce-category-query-service
  labels:
    app.kubernetes.io/instance: ecommerce-go-service
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ecommerce-category-query-service
    app.kubernetes.io/version: 0.0.9
    helm.sh/chart: ecommerce-category-query-service-0.0.2
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/instance: ecommerce-go-service
    app.kubernetes.io/name: ecommerce-category-query-service
---
# Source: ecommerce-go-service/charts/ecommerce-category-service/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ecommerce-go-service-ecommerce-category-service
  labels:
    app.kubernetes.io/instance: ecommerce-go-service
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ecommerce-category-service
    app.kubernetes.io/version: 0.0.14
    helm.sh/chart: ecommerce-category-service-0.0.20
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/instance: ecommerce-go-service
    app.kubernetes.io/name: ecommerce-category-service
---
# Source: ecommerce-go-service/charts/ecommerce-product-query-service/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ecommerce-go-service-ecommerce-product-query-service
  labels:
    app.kubernetes.io/instance: ecommerce-go-service
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ecommerce-product-query-service
    app.kubernetes.io/version: 0.0.7
    helm.sh/chart: ecommerce-product-query-service-0.0.2
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/instance: ecommerce-go-service
    app.kubernetes.io/name: ecommerce-product-query-service
---
# Source: ecommerce-go-service/charts/ecommerce-product-service/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ecommerce-go-service-ecommerce-product-service
  labels:
    app.kubernetes.io/instance: ecommerce-go-service
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ecommerce-product-service
    app.kubernetes.io/version: 0.0.14
    helm.sh/chart: ecommerce-product-service-0.0.20
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/instance: ecommerce-go-service
    app.kubernetes.io/name: ecommerce-product-service
---
# Source: ecommerce-go-service/charts/ecommerce-category-query-service/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ecommerce-go-service-ecommerce-category-query-service
  labels:
    app.kubernetes.io/instance: ecommerce-go-service
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ecommerce-category-query-service
    app.kubernetes.io/version: 0.0.9
    helm.sh/chart: ecommerce-category-query-service-0.0.2
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: ecommerce-go-service
      app.kubernetes.io/name: ecommerce-category-query-service
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: ecommerce-go-service
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: ecommerce-category-query-service
        app.kubernetes.io/version: 0.0.9
        helm.sh/chart: ecommerce-category-query-service-0.0.2
    spec:
      serviceAccountName: "default"
      containers:
        - name: app

          envFrom:
            - configMapRef:
                name: ecommerce-category-query-service-config
          image: "sokol111/ecommerce-category-query-service:0.0.9"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /health/live
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 2
          readinessProbe:
            httpGet:
              path: /health/ready
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 2
---
# Source: ecommerce-go-service/charts/ecommerce-category-service/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ecommerce-go-service-ecommerce-category-service
  labels:
    app.kubernetes.io/instance: ecommerce-go-service
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ecommerce-category-service
    app.kubernetes.io/version: 0.0.14
    helm.sh/chart: ecommerce-category-service-0.0.20
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: ecommerce-go-service
      app.kubernetes.io/name: ecommerce-category-service
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: ecommerce-go-service
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: ecommerce-category-service
        app.kubernetes.io/version: 0.0.14
        helm.sh/chart: ecommerce-category-service-0.0.20
    spec:
      serviceAccountName: "default"
      containers:
        - name: app

          envFrom:
            - configMapRef:
                name: ecommerce-category-service-config
          image: "sokol111/ecommerce-category-service:0.0.14"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /health/live
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 2
          readinessProbe:
            httpGet:
              path: /health/ready
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 2
---
# Source: ecommerce-go-service/charts/ecommerce-product-query-service/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ecommerce-go-service-ecommerce-product-query-service
  labels:
    app.kubernetes.io/instance: ecommerce-go-service
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ecommerce-product-query-service
    app.kubernetes.io/version: 0.0.7
    helm.sh/chart: ecommerce-product-query-service-0.0.2
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: ecommerce-go-service
      app.kubernetes.io/name: ecommerce-product-query-service
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: ecommerce-go-service
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: ecommerce-product-query-service
        app.kubernetes.io/version: 0.0.7
        helm.sh/chart: ecommerce-product-query-service-0.0.2
    spec:
      serviceAccountName: "default"
      containers:
        - name: app

          envFrom:
            - configMapRef:
                name: ecommerce-product-query-service-config
          image: "sokol111/ecommerce-product-query-service:0.0.7"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /health/live
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 2
          readinessProbe:
            httpGet:
              path: /health/ready
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 2
---
# Source: ecommerce-go-service/charts/ecommerce-product-service/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ecommerce-go-service-ecommerce-product-service
  labels:
    app.kubernetes.io/instance: ecommerce-go-service
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ecommerce-product-service
    app.kubernetes.io/version: 0.0.14
    helm.sh/chart: ecommerce-product-service-0.0.20
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: ecommerce-go-service
      app.kubernetes.io/name: ecommerce-product-service
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: ecommerce-go-service
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: ecommerce-product-service
        app.kubernetes.io/version: 0.0.14
        helm.sh/chart: ecommerce-product-service-0.0.20
    spec:
      serviceAccountName: "default"
      containers:
        - name: app

          envFrom:
            - configMapRef:
                name: ecommerce-product-service-config
          image: "sokol111/ecommerce-product-service:0.0.14"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /health/live
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 2
          readinessProbe:
            httpGet:
              path: /health/ready
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 2
---
# Source: ecommerce-go-service/charts/ecommerce-category-query-service/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ecommerce-go-service-ecommerce-category-query-service
  labels:
    app.kubernetes.io/instance: ecommerce-go-service
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ecommerce-category-query-service
    app.kubernetes.io/version: 0.0.9
    helm.sh/chart: ecommerce-category-query-service-0.0.2
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: web
spec:
  rules:
    - host: ecommerce-category-query-service.localhost
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: ecommerce-go-service-ecommerce-category-query-service
                port:
                  number: 8080
---
# Source: ecommerce-go-service/charts/ecommerce-category-service/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ecommerce-go-service-ecommerce-category-service
  labels:
    app.kubernetes.io/instance: ecommerce-go-service
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ecommerce-category-service
    app.kubernetes.io/version: 0.0.14
    helm.sh/chart: ecommerce-category-service-0.0.20
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: web
spec:
  rules:
    - host: ecommerce-category-service.localhost
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: ecommerce-go-service-ecommerce-category-service
                port:
                  number: 8080
---
# Source: ecommerce-go-service/charts/ecommerce-product-query-service/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ecommerce-go-service-ecommerce-product-query-service
  labels:
    app.kubernetes.io/instance: ecommerce-go-service
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ecommerce-product-query-service
    app.kubernetes.io/version: 0.0.7
    helm.sh/chart: ecommerce-product-query-service-0.0.2
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: web
spec:
  rules:
    - host: ecommerce-product-query-service.localhost
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: ecommerce-go-service-ecommerce-product-query-service
                port:
                  number: 8080
---
# Source: ecommerce-go-service/charts/ecommerce-product-service/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ecommerce-go-service-ecommerce-product-service
  labels:
    app.kubernetes.io/instance: ecommerce-go-service
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ecommerce-product-service
    app.kubernetes.io/version: 0.0.14
    helm.sh/chart: ecommerce-product-service-0.0.20
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: web
spec:
  rules:
    - host: ecommerce-product-service.localhost
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: ecommerce-go-service-ecommerce-product-service
                port:
                  number: 8080
