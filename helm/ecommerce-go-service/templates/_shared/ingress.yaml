{{/*
  shared.ingress â€” template for Ingress

  Usage:
    {{ include "shared.ingress" (dict
      "name" (include "ecommerce-category-service.fullname" .)
      "Labels" (include "ecommerce-category-service.labels" . | fromYaml)
      "Values" .Values
    ) }}
*/}}

{{- define "shared.ingress" -}}

{{- $values := .Values }}
{{- $global := .Values.global }}
{{- $ingress := or $values.ingress $global.ingress }}
{{- $service := or $values.service $global.service }}

{{- $enabled := and $ingress $ingress.enabled | default false }}
{{- $host := and $ingress $ingress.host | default "example.com" }}
{{- $path := and $ingress $ingress.path | default "/" }}
{{- $annotations := and $ingress $ingress.annotations }}
{{- $port := and $service $service.port | default 80 }}

{{- if $enabled }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .name }}
  labels:
    {{- toYaml .Labels | nindent 4 }}
  annotations:
    {{- if $annotations }}
    {{- toYaml $annotations | nindent 4 }}
    {{- else }}
    traefik.ingress.kubernetes.io/router.entrypoints: web
    traefik.ingress.kubernetes.io/router.rule: "Host(`{{ $host }}`)"
    {{- end }}
spec:
  rules:
    - host: {{ $host }}
      http:
        paths:
          - path: {{ $path }}
            pathType: Prefix
            backend:
              service:
                name: {{ .name }}
                port:
                  number: {{ $port }}
{{- end }}
{{- end }}